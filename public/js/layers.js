L.GridLayer.DebugCoords=L.GridLayer.extend({createTile:function(e){var t=document.createElement("div");return t.innerHTML=[e.x,e.y-1,e.z].join(", "),t}}),L.gridLayer.debugCoords=function(e){return new L.GridLayer.DebugCoords(e)},map.addLayer(L.gridLayer.debugCoords({tileSize:250})),L.GridLayer.Lidar=L.GridLayer.extend({createTile:function(e,o){var s=document.createElement("canvas"),t=this.getTileSize();s.setAttribute("width",t.x),s.setAttribute("height",t.y);var d=s.getContext("2d"),n=e.x,r=Math.abs(e.y)-1;return fetch("/lidar?lat="+n+"&lon="+r).then(function(e){return e.json()}).then(function(e){for(var t=e.data,n=0;n<t.length;n++)for(var r=t[n],i=0;i<r.length;i++){r[i]<0&&(r[i]=0);var a=r[i]/120;d.fillStyle="rgba(0,0,0,"+a+")",d.fillRect(i,n,1,1)}o(null,s)}).catch(function(e){console.log(e)}),s}}),L.gridLayer.lidar=function(e){return new L.GridLayer.Lidar(e)},map.addLayer(L.gridLayer.lidar({tileSize:250}));var SunPositionLayer=L.CanvasLayer.extend({render:function(){var e=this.getCanvas(),t=e.getContext("2d");t.clearRect(0,0,e.width,e.height);var n=getSunAzis(MAP_CENTER),i=this._map.latLngToContainerPoint(MAP_CENTER);t.fillStyle="rgba(255, 60, 60, 0.2)",t.strokeStyle="rgba(255, 60, 60, 0.9)",r=e.width;var a=i.x+r*Math.cos(Math.PI/2+n.sunrise),o=i.y+r*Math.sin(Math.PI/2+n.sunrise),s=i.x+r*Math.cos(Math.PI/2+n.sunset),d=i.y+r*Math.sin(Math.PI/2+n.sunset);t.beginPath(),t.moveTo(i.x,i.y),t.lineTo(a,o),t.stroke(),t.beginPath(),t.moveTo(i.x,i.y),t.lineTo(s,d),t.stroke();var y={startX:0,startY:e.height,endX:e.width,endY:e.height},u=computeIntersection({x:y.startX,y:y.startY},{x:y.endX,y:y.endY},{x:i.x,y:i.y},{x:a,y:o}),c=computeIntersection({x:y.startX,y:y.startY},{x:y.endX,y:y.endY},{x:i.x,y:i.y},{x:s,y:d});t.drawImage(document.getElementById("sunrise-icon"),u.point.x-31,u.point.y-35,62,35),t.drawImage(document.getElementById("sunset-icon"),c.point.x-31,c.point.y-35,62,35)}}),sunPositionLayer=new SunPositionLayer;function computeIntersection(e,t,n,r){var i=this.computeH(e,t,n,r),a=this.computeH(n,r,e,t),o=(isNaN(i)||isNaN(a),r.x-n.x),s=r.y-n.y;return{intersection:0<=i&&i<=1&&0<=a&&a<=1,point:{x:n.x+o*i,y:n.y+s*i}}}function computeH(e,t,n,r){var i={x:t.x-e.x,y:t.y-e.y},a=r.x-n.x,o=r.y-n.y,s=-i.y,d=i.x,y=a*s+o*d;return 0===y?NaN:((e.x-n.x)*s+(e.y-n.y)*d)/y}sunPositionLayer.addTo(map);